{"version":3,"sources":["components/Filter.js","components/Personform.js","components/Persons.js","services/phone.js","components/Notification.js","components/NotificationList.js","App.js","index.js"],"names":["Filter","searchName","handleSearch","value","onChange","Personform","name","number","onSubmit","handleName","handleNumber","type","Persons","persons","searchText","deletePerson","filter","person","toLowerCase","indexOf","map","key","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","console","log","delete","put","Notification","message","isError","style","color","border","borderRadius","fontSize","padding","backgroundColor","margin","Notifications","lastNotificationId","state","messages","text","this","setState","concat","setTimeout","m","addItem","position","top","left","slice","React","Component","App","notificationsRef","useRef","showError","useCallback","current","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setSearchName","useEffect","servicePhone","initialPhones","checkUpdateNumber","p","find","window","confirm","updatedPerson","ref","e","target","event","preventDefault","nameObject","catch","error","isAxiosError","status","checkHandleValidationError","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64eb5fbb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({searchName, handleSearch}) => {\r\n    return(\r\n        <div>\r\n          search: <input\r\n            value={searchName}\r\n            onChange={handleSearch}\r\n          />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React from 'react'\r\n\r\n\r\nconst Personform = ({name, number, onSubmit}) => {\r\n    return(\r\n        <form onSubmit={onSubmit}>\r\n            <div>\r\n            name: <input\r\n                value={name.value}\r\n                onChange={name.handleName}\r\n            />\r\n            </div>\r\n            <div>\r\n            number: <input\r\n                value={number.value}\r\n                onChange={number.handleNumber}\r\n            />\r\n            </div>\r\n            <div>\r\n            <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Personform;","import React from 'react'\r\n\r\n// const Persons = ({persons}) => {\r\n//     console.log(persons)\r\n//     return(\r\n//         <div>\r\n//         <h2>Numbers</h2>\r\n//         <ul><p>{persons}</p></ul>\r\n//         </div>\r\n//     )\r\n// }\r\nconst Persons = ({ persons, searchText, deletePerson }) => (\r\n    <>\r\n      <ul>\r\n        {persons\r\n          .filter(\r\n            person =>\r\n              person.name.toLowerCase().indexOf(searchText.toLowerCase()) > -1,\r\n          )\r\n          .map(person => (\r\n            <li key={person.name}>\r\n              {person.name} {person.number}\r\n              <button onClick={deletePerson(person.id, person.name)}>Delete</button>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </>\r\n  )\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\n\r\nconst remove = (id, name) => {\r\n    console.log(id);\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n     return request.then(response => response.data)\r\n} \r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, remove, update}","import React from \"react\";\r\n\r\nconst Notification = ({ message, isError }) => {\r\n  if (!message) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        color: isError ? \"red\" : \"green\",\r\n        border: \"0.2em solid currentColor\",\r\n        borderRadius: \"0.3em\",\r\n        fontSize: \"125%\",\r\n        padding: \"0.3em 0.5em\",\r\n        backgroundColor: \"white\",\r\n        margin: \"0.5em 0.5em\"\r\n      }}\r\n    >\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;","import React from \"react\";\r\n\r\nimport Notification from \"./Notification\";\r\n\r\nconst NOTIFICATION_VISIBLE_TIME = 5000;\r\n\r\n// Class component is better here because we need to provide\r\n// imperative APIs showError() showMessage() to the client\r\n// of this component.\r\n// Also setTimeout + conventional setState are less bug prone\r\n// with hooks, the handler of `setTimeout` will capture the state\r\n// at the moment of the closure's creation, which isn't what is\r\n// needed here.\r\nexport default class Notifications extends React.Component {\r\n  lastNotificationId = 0;\r\n\r\n  state = {\r\n    messages: []\r\n  };\r\n\r\n  addItem(text, isError) {\r\n    let id = this.lastNotificationId++;\r\n    this.setState(state => ({\r\n      messages: state.messages.concat({ id, text, isError })\r\n    }));\r\n    setTimeout(() => {\r\n      this.setState(state => ({\r\n        messages: state.messages.filter(m => m.id !== id)\r\n      }));\r\n    }, NOTIFICATION_VISIBLE_TIME);\r\n  }\r\n\r\n  showMessage(message) {\r\n    this.addItem(message, false);\r\n  }\r\n\r\n  showError(message) {\r\n    this.addItem(message, true);\r\n  }\r\n\r\n  render() {\r\n    const { messages } = this.state;\r\n    return (\r\n      <div style={{ position: \"fixed\", top: 0, left: 0 }}>\r\n        {messages.slice(-4).map(m => (\r\n          <Notification key={m.id} message={m.text} isError={m.isError} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport Filter from './components/Filter'\nimport Personform from './components/Personform'\nimport Persons from './components/Persons'\nimport servicePhone from './services/phone'\nimport NotificationList from \"./components/NotificationList\";\n\n\n\nconst App = () => {\n\n  const notificationsRef = useRef(null);\n  // these 2 callbacks will hide that the ref is used\n  // and they will make the usage more expressive\n  const showError = useCallback(m => notificationsRef.current.showError(m), [\n    notificationsRef\n  ]);\n  \n  const [ persons, setPersons] = useState([]);\n\n  const [ newName, setNewName ] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [searchName, setSearchName] = useState('');\n\n  useEffect(() => {\n    servicePhone\n      .getAll()\n      .then(initialPhones => {\n        setPersons(initialPhones)\n      })\n  }, [])\n\n  const checkHandleValidationError = error => {\n    if (error.isAxiosError && error.response && error.response.status === 400) {\n      showError(\n        (error.response.data && error.response.data.error) || error.message\n      );\n      return true;\n    }\n    return false;\n  };\n\n  const addName = (event) => {\n    event.preventDefault()\n    const same = persons.filter(person => person.name === newName);\n    // if(same) {\n    //   alert(`${newName} already exists`);\n    //   return\n    // }\n    if (checkUpdateNumber()) {\n      return;\n    }\n      const nameObject = {\n        name: newName,\n        number: newNumber\n      }\n          servicePhone\n            .create(nameObject)\n            .then(response => {\n            setPersons(persons.concat(nameObject))\n            setNewName('')\n            setNewNumber('')\n        })\n          .catch(error => {\n            if (!checkHandleValidationError(error)) {\n              showError(`Failed to add ${nameObject.name}. ${error}`);\n            }\n        })\n      };  \n\n        const checkUpdateNumber = () => {\n          const p = persons.find(p => p.name === newName);\n          if (!p) {\n            return false;\n          }\n          if (\n            !window.confirm(\n              `${newName} is already in the phonebook.\\nDo you want to update the number?`\n            )\n          ) {\n            return false;\n          }\n          const id = p.id;\n          servicePhone\n            .update(id, { ...p, number: newNumber })\n            .then(updatedPerson => {\n              setPersons(persons.map(p => (p.id !== id ? p : updatedPerson)));\n              setNewName(\"\");\n              setNewNumber(\"\");\n            })\n          return true;\n        };\n\n  const handleNameInput = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberInput = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchInput = (e) => {\n    setSearchName(e.target.value);\n  }\n\n      \n      const deletePerson = (id, name) => {\n        return () => {\n          if (window.confirm(`Delete ${name}`)) {\n            servicePhone.remove(id, name).then(() => {\n              setPersons(persons.filter(person => person.id !== id))\n            })\n          }\n        }\n        }\n\n  return (\n    <div>\n      <NotificationList ref={notificationsRef} />\n      <h2>Phonebook</h2>\n      <Filter value={searchName} handleSearch={handleSearchInput}/> \n      <Personform onSubmit={addName}\n        name={{value: newName, handleName: handleNameInput}}\n        number={{value: newNumber, handleNumber: handleNumberInput}}\n      />\n      <Persons\n        persons={persons}\n        searchText={searchName}\n        deletePerson={deletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}